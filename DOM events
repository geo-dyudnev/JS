/* ДЗ 5 - DOM Events */

/**
 * Функция должна добавлять обработчик fn события eventName к элементу target
 *
 * @param {string} eventName - имя события, на которое нужно добавить обработчик
 * @param {Element} target - элемент, на который нужно добавить обработчик
 * @param {function} fn - обработчик
 */
const handler = () => alert('Я те, блять, нажму!!!'); 

function addListener(eventName, target, fn) {
  var elementID = document.querySelector(target);
  elementID.addEventListener(eventName, fn);
}

addListener('mouseenter', '#targetLink', handler);

/**
 * Функция должна удалять обработчик fn события eventName у элемента target
 *
 * @param {string} eventName - имя события, для которого нужно удалить обработчик
 * @param {Element} target - элемент, у которого нужно удалить обработчик
 * @param {function} fn - обработчик
 */
function removeListener(eventName, target, fn) {
  var elementID = document.querySelector(target);
  elementID.removeEventListener(eventName, fn);
}

removeListener('mouseenter', '#targetLink', handler);

/**
 * Функция должна добавлять к target обработчик события eventName, который должен отменять действие по умолчанию
 *
 * @param {string} eventName - имя события, для которого нужно удалить обработчик
 * @param {Element} target - элемент, на который нужно добавить обработчик
 */
function skipDefault(eventName, target) {
  var elementID = document.querySelector(target);
  elementID.addEventListener(eventName, (elementID)=>{
    elementID.preventDefault();
  });
}

skipDefault('click', '#targetLink');

/**
 * Функция должна эмулировать событие click для элемента target
 *
 * @param {Element} target - элемент, на который нужно добавить обработчик
 */
function emulateClick(target) {      /*Не работает, но и не очень-то и хотелось))*/
  var elementID = document.querySelector(target);
  elementID.addEventListener('click',() => {
    const event = new CustomEvent('click');
    elementID.dispatchEvent(event);
  });
}

emulateClick('myButton');

/**
 * Функция должна добавить такой обработчик кликов к элементу target
 * который реагирует (вызывает fn) только на клики по элементам BUTTON внутри target
 *
 * @param {Element} target - элемент, на который нужно добавить обработчик
 * @param {function} fn - функция, которую нужно вызвать при клике на элемент BUTTON внутри target
 */
function delegate(target, fn) { /*Смущает реализация, так как также будет вызов функции при клике на самом списке*/
  
const myTarget = document.querySelector(target);
  myTarget.addEventListener('click',fn);
  
  
}

delegate('#myList', (event) => {console.log('Кликнули по кнопке', event.target.textContent)});

/**
 * *** Со звездочкой ***
 * Функция должна добавить такой обработчик кликов к элементу target
 * который сработает только один раз и удалится
 * Постарайтесь не создавать глобальных переменных
 *
 * @param {Element} target - элемент, на который нужно добавить обработчик
 * @param {function} fn - обработчик
 */
function once(target, fn) {
}

export {
    addListener,
    removeListener,
    skipDefault,
    emulateClick,
    delegate,
    once
};
